>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

ERROR CASE
==========

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

::

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

::

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

::

>>> bg.integer_validator(1, -4)
Traceback (most recent call last):
ValueError: 1 must be greater than 0

::

>>> bg.integer_validator(0, 0)
Traceback (most recent call last):
ValueError: 0 must be greater than 0

::

>>> bg.integer_validator("", "")
Traceback (most recent call last):
TypeError:  must be an integer

::

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("emi", (1, 2, 3))
Traceback (most recent call last):
TypeError: emi must be an integer

>>> bg.integer_validator("emi", {"i" : 12})
Traceback (most recent call last):
TypeError: emi must be an integer

>>> bg.integer_validator("emily")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator([1, 2, 3])
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("emily", 2.02)
Traceback (most recent call last):
TypeError: emily must be an integer

>>> bg.integer_validator("emily", [1, 2, 3])
Traceback (most recent call last):
TypeError: emily must be an integer

>>> bg.integer_validator("e", True)
Traceback (most recent call last):
TypeError: e must be an integer

>>> bg.integer_validator("e", 1, 1)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator("e", "2")
Traceback (most recent call last):
TypeError: e must be an integer

>>> bg.integer_validator("e", )
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(, 1)
Traceback (most recent call last):
SyntaxError: invalid syntax
